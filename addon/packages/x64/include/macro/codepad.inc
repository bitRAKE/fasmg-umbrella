
; based on work by Tomasz Grysztar
; https://board.flatassembler.net/topic.php?p=226516#226516
;
; Works well with advanced align macro (..\..\utility\align.inc):
;	align 16, codepad #
;
; bitRAKE: using different selection for multi-instruction alignment

struc bstr? bytes&
	virtual at 0
		db bytes
		load . : $ from 0
	end virtual
end struc

; Intel recommended alignment sematics (Pentium Pro and newer).
define aligncode aligncode
namespace aligncode
?15 bstr 0x0F,0x1F,0x80,0x00,0x00,0x00,0x00, 0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00
?14 bstr 0x0F,0x1F,0x80,0x00,0x00,0x00,0x00, 0x0F,0x1F,0x80,0x00,0x00,0x00,0x00
?13 bstr 0x66,0x0F,0x1F,0x44,0x00,0x00, 0x0F,0x1F,0x80,0x00,0x00,0x00,0x00
?12 bstr 0x66,0x0F,0x1F,0x44,0x00,0x00, 0x66,0x0F,0x1F,0x44,0x00,0x00
?11 bstr 0x0F,0x1F,0x44,0x00,0x00, 0x66,0x0F,0x1F,0x44,0x00,0x00
?10 bstr 0x0F,0x1F,0x44,0x00,0x00, 0x0F,0x1F,0x44,0x00,0x00
; single instruction nops
?9 bstr 0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00
?8 bstr 0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00
?7 bstr 0x0F,0x1F,0x80,0x00,0x00,0x00,0x00
?6 bstr 0x66,0x0F,0x1F,0x44,0x00,0x00
?5 bstr 0x0F,0x1F,0x44,0x00,0x00
?4 bstr 0x0F,0x1F,0x40,0x00
?3 bstr 0x0F,0x1F,0x00
?2 bstr 0x66,0x90
?1 bstr 0x90
?0 := ''
end namespace

calminstruction codepad length*
	compute length, length
	arrange length, =db =aligncode.length
	assemble length
end calminstruction
